/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PagedCities from '../model/PagedCities';

/**
* CityOperationsController service.
* @module api/CityOperationsControllerApi
* @version v0
*/
export default class CityOperationsControllerApi {

    /**
    * Constructs a new CityOperationsControllerApi. 
    * @alias module:api/CityOperationsControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteCities operation.
     * @callback module:api/CityOperationsControllerApi~deleteCitiesCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/CityOperationsControllerApi~deleteCitiesCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteCities(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuthentication'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/cities/clear', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the importCities operation.
     * @callback module:api/CityOperationsControllerApi~importCitiesCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/CityOperationsControllerApi~importCitiesCallback} callback The callback function, accepting three arguments: error, data, response
     */
    importCities(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuthentication'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/cities/import', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the searchCities operation.
     * @callback module:api/CityOperationsControllerApi~searchCitiesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PagedCities} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 0)] 
     * @param {Number} [pageSize = 10)] 
     * @param {String} [searchCityName] 
     * @param {module:api/CityOperationsControllerApi~searchCitiesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PagedCities}
     */
    searchCities(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'pageSize': opts['pageSize'],
        'searchCityName': opts['searchCityName']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuthentication'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = PagedCities;
      return this.apiClient.callApi(
        '/cities/search', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
