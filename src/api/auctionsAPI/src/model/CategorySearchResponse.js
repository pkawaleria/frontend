/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CategoryPathResponse from './CategoryPathResponse';
import SimpleCategoryResponse from './SimpleCategoryResponse';

/**
 * The CategorySearchResponse model module.
 * @module model/CategorySearchResponse
 * @version v0
 */
class CategorySearchResponse {
    /**
     * Constructs a new <code>CategorySearchResponse</code>.
     * @alias module:model/CategorySearchResponse
     * @param category {module:model/SimpleCategoryResponse} 
     * @param categoryPath {module:model/CategoryPathResponse} 
     */
    constructor(category, categoryPath) { 
        
        CategorySearchResponse.initialize(this, category, categoryPath);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, category, categoryPath) { 
        obj['category'] = category;
        obj['categoryPath'] = categoryPath;
    }

    /**
     * Constructs a <code>CategorySearchResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CategorySearchResponse} obj Optional instance to populate.
     * @return {module:model/CategorySearchResponse} The populated <code>CategorySearchResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CategorySearchResponse();

            if (data.hasOwnProperty('category')) {
                obj['category'] = SimpleCategoryResponse.constructFromObject(data['category']);
            }
            if (data.hasOwnProperty('categoryPath')) {
                obj['categoryPath'] = CategoryPathResponse.constructFromObject(data['categoryPath']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CategorySearchResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CategorySearchResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CategorySearchResponse.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `category`
        if (data['category']) { // data not null
          SimpleCategoryResponse.validateJSON(data['category']);
        }
        // validate the optional field `categoryPath`
        if (data['categoryPath']) { // data not null
          CategoryPathResponse.validateJSON(data['categoryPath']);
        }

        return true;
    }


}

CategorySearchResponse.RequiredProperties = ["category", "categoryPath"];

/**
 * @member {module:model/SimpleCategoryResponse} category
 */
CategorySearchResponse.prototype['category'] = undefined;

/**
 * @member {module:model/CategoryPathResponse} categoryPath
 */
CategorySearchResponse.prototype['categoryPath'] = undefined;






export default CategorySearchResponse;

