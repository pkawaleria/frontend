/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AuctionImagesResponse model module.
 * @module model/AuctionImagesResponse
 * @version v0
 */
class AuctionImagesResponse {
    /**
     * Constructs a new <code>AuctionImagesResponse</code>.
     * @alias module:model/AuctionImagesResponse
     * @param imageIDs {Array.<String>} 
     * @param imagesCount {Number} 
     */
    constructor(imageIDs, imagesCount) { 
        
        AuctionImagesResponse.initialize(this, imageIDs, imagesCount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, imageIDs, imagesCount) { 
        obj['imageIDs'] = imageIDs;
        obj['imagesCount'] = imagesCount;
    }

    /**
     * Constructs a <code>AuctionImagesResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuctionImagesResponse} obj Optional instance to populate.
     * @return {module:model/AuctionImagesResponse} The populated <code>AuctionImagesResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuctionImagesResponse();

            if (data.hasOwnProperty('imageIDs')) {
                obj['imageIDs'] = ApiClient.convertToType(data['imageIDs'], ['String']);
            }
            if (data.hasOwnProperty('imagesCount')) {
                obj['imagesCount'] = ApiClient.convertToType(data['imagesCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuctionImagesResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuctionImagesResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AuctionImagesResponse.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['imageIDs'])) {
            throw new Error("Expected the field `imageIDs` to be an array in the JSON data but got " + data['imageIDs']);
        }

        return true;
    }


}

AuctionImagesResponse.RequiredProperties = ["imageIDs", "imagesCount"];

/**
 * @member {Array.<String>} imageIDs
 */
AuctionImagesResponse.prototype['imageIDs'] = undefined;

/**
 * @member {Number} imagesCount
 */
AuctionImagesResponse.prototype['imagesCount'] = undefined;






export default AuctionImagesResponse;

