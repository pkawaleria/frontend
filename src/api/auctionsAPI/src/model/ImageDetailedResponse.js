/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ImageDetailedResponse model module.
 * @module model/ImageDetailedResponse
 * @version v0
 */
class ImageDetailedResponse {
    /**
     * Constructs a new <code>ImageDetailedResponse</code>.
     * @alias module:model/ImageDetailedResponse
     * @param type {String} 
     * @param size {Number} 
     * @param auctionId {String} 
     * @param binaryData {Blob} 
     */
    constructor(type, size, auctionId, binaryData) { 
        
        ImageDetailedResponse.initialize(this, type, size, auctionId, binaryData);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type, size, auctionId, binaryData) { 
        obj['type'] = type;
        obj['size'] = size;
        obj['auctionId'] = auctionId;
        obj['binaryData'] = binaryData;
    }

    /**
     * Constructs a <code>ImageDetailedResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageDetailedResponse} obj Optional instance to populate.
     * @return {module:model/ImageDetailedResponse} The populated <code>ImageDetailedResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageDetailedResponse();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('auctionId')) {
                obj['auctionId'] = ApiClient.convertToType(data['auctionId'], 'String');
            }
            if (data.hasOwnProperty('binaryData')) {
                obj['binaryData'] = ApiClient.convertToType(data['binaryData'], 'Blob');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImageDetailedResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImageDetailedResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ImageDetailedResponse.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['auctionId'] && !(typeof data['auctionId'] === 'string' || data['auctionId'] instanceof String)) {
            throw new Error("Expected the field `auctionId` to be a primitive type in the JSON string but got " + data['auctionId']);
        }

        return true;
    }


}

ImageDetailedResponse.RequiredProperties = ["type", "size", "auctionId", "binaryData"];

/**
 * @member {String} id
 */
ImageDetailedResponse.prototype['id'] = undefined;

/**
 * @member {String} type
 */
ImageDetailedResponse.prototype['type'] = undefined;

/**
 * @member {Number} size
 */
ImageDetailedResponse.prototype['size'] = undefined;

/**
 * @member {String} auctionId
 */
ImageDetailedResponse.prototype['auctionId'] = undefined;

/**
 * @member {Blob} binaryData
 */
ImageDetailedResponse.prototype['binaryData'] = undefined;






export default ImageDetailedResponse;

